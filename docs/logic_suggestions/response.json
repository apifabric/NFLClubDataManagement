{
    "models": [
        {
            "classname": "Player",
            "code": "class Player(Base):\n    __tablename__ = 'player'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String, nullable=False)\n    position = Column(String)\n    history = Column(String)\n    football_club_id = Column(Integer, ForeignKey('football_club.id'))\n    game_count = Column(Integer, default=0)  # new column\n    is_honorary_canadian = Column(Boolean, default=False)  # new column\n",
            "description": "Represents a player who is part of a football club including game count and honorary Canadian status.",
            "name": "player"
        },
        {
            "classname": "GameStatistics",
            "code": "class GameStatistics(Base):\n    __tablename__ = 'game_statistics'\n\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    player_id = Column(Integer, ForeignKey('player.id'), nullable=False)\n    game_date = Column(Date, nullable=False)\n    goals = Column(Integer, default=0)\n    assists = Column(Integer, default=0)",
            "description": "Statistics for games played by players.",
            "name": "game_statistics"
        }
    ],
    "rules": [
        {
            "name": "Game Count Derivation",
            "description": "Derives the game count for a player.",
            "use_case": "Derive game count for player's records.",
            "entity": "Player",
            "code": "Rule.count(derive=Player.game_count, as_count_of=GameStatistics)"
        },
        {
            "name": "Honorary Canadian Status Determination",
            "description": "Sets honorary Canadian status for players with more than 3 games.",
            "use_case": "Determine if a player becomes an honorary Canadian.",
            "entity": "Player",
            "code": "Rule.constraint(validate=Player,\n    as_condition=lambda row: row.game_count > 3 and not row.is_honorary_canadian,\n    error_msg=\"Player must be set as honorary Canadian after playing more than 3 games\")"
        }
    ],
    "test_data": "Players' data to verify honorary Canadian qualification.",
    "test_data_rows": [
        {
            "test_data_row_variable": "player1",
            "code": "player1 = Player(id=1, name=\"John Doe\", game_count=4, is_honorary_canadian=False)"
        },
        {
            "test_data_row_variable": "player2",
            "code": "player2 = Player(id=2, name=\"Jane Smith\", game_count=2, is_honorary_canadian=False)"
        },
        {
            "test_data_row_variable": "player3",
            "code": "player3 = Player(id=3, name=\"Alex Johnson\", game_count=3, is_honorary_canadian=False)"
        },
        {
            "test_data_row_variable": "test_stat1",
            "code": "stat = GameStatistics(player_id=1, game_date=date(2023, 10, 10), goals=2, assists=3)"
        },
        {
            "test_data_row_variable": "test_stat2",
            "code": "stat = GameStatistics(player_id=2, game_date=date(2023, 10, 11), goals=0, assists=1)"
        },
        {
            "test_data_row_variable": "test_stat3",
            "code": "stat = GameStatistics(player_id=3, game_date=date(2023, 10, 12), goals=1, assists=0)"
        },
        {
            "test_data_row_variable": "test_stat4",
            "code": "stat = GameStatistics(player_id=1, game_date=date(2023, 10, 13), goals=3, assists=2)"
        }
    ],
    "test_data_sqlite": "Test dataset for verifying honorary Canadian status of players.",
    "name": "HonoraryCanadianLogic"
}